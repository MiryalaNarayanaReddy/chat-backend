openapi: 3.0.0
info:
  title: Chat API
  version: 1.0.0
  description: API documentation for the chat application
servers:
  - url: http://localhost:3000
paths:
  /auth/signup:
    post:
      summary: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "testuser"
                password:
                  type: string
                  example: "testpassword123"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                        example: "testuser"
        '400':
          description: Invalid input or error during user creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  /auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "testuser"
                password:
                  type: string
                  example: "testpassword123"
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt_token_here"
                  message:
                    type: string
                    example: "Successfully logged in"
        '400':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Incorrect password or username not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  /chat/{chatId}:
    get:
      summary: Get chat by ID
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the chat to retrieve
      responses:
        '200':
          description: Chat retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat:
                    type: object
                    example: {
                      "_id": "60c72b2f4f1c2c001c8d4c89",
                      "participants": ["60c72b2f4f1c2c001c8d4c8a", "60c72b2f4f1c2c001c8d4c8b"],
                      "messages": []
                    }
        '400':
          description: Chat not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chat not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  /user/all:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successfully retrieved all users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "60c72b2f4f1c2c001c8d4c8a"
                        username:
                          type: string
                          example: "testuser"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  /user/addChat:
    post:
      summary: Add a new chat between two users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user2:
                  type: string
                  example: "testuser2"
      responses:
        '200':
          description: Chat created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatId:
                    type: string
                    example: "60c72b2f4f1c2c001c8d4c89"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"


